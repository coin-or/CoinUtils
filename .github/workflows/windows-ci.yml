---
name: Windows build and test
on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - '*'
  release:

jobs:
  test:
    name: Run tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019]
        tests: [none, main]
        arch: [x86_64, i686]
        debug: ["--enable-debug", ""]
        include:
          - os: windows-2019
            tests: main
            arch: win64
            debug: ""
            download_requirements: CALL C:\"Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          - os: windows-2019
            tests: none
            arch: win64
            debug: "--enable-debug"
            download_requirements: CALL C:\"Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          - os: windows-2016
            tests: main
            arch: win64
            debug: ""
            download_requirements: CALL C:\"Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          - os: windows-2016
            tests: none
            arch: win64
            debug: "--enable-debug"
            download_requirements: CALL C:\"Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          path: ${{ github.event.repository.name }}
      - name: Install required packages
        run: ${{ matrix.install_dependencies }}
      - name: Fetch Data-Sample repository
        uses: actions/checkout@v2
        with:
          repository: coin-or-tools/Data-Sample
          path: Data/Sample
      - name: Fetch ThirdParty-Glpk repository
        uses: actions/checkout@v2
        with:
          repository: coin-or-tools/ThirdParty-Glpk
          path: ThirdParty/Glpk
      - name: Checkout coinbrew
        uses: actions/checkout@v2
        with:
          repository: coin-or/coinbrew
          path: coinbrew
      - name: Set correct host flag and install requirements
        if: ${{ matrix.arch == 'win64' }}
        run: |
          echo "host_flag=--enable-msvc" >> $GITHUB_ENV
          ${{ matrix.download_requirements }}
        shell: cmd
      - name: Set correct host flag and install requirements
        if: ${{ matrix.arch != 'win64' }}
        run: |
          echo "host_flag=--host=${{ matrix.arch }}-w64-mingw32" >> $GITHUB_ENV
          bash -l -c "pacman -S mingw-w64-${{ matrix.arch }}-lapack mingw-w64-${{ matrix.arch }}-winpthreads-git mingw-w64-${{ matrix.arch }}-readline mingw-w64-${{ matrix.arch }}-suitesparse mingw-w64-${{ matrix.arch }}-metis --noconfirm"
      - name: Build project
        run: bash -l -c "./coinbrew/coinbrew build  ${{ github.event.repository.name }} --no-prompt --skip='ThirdParty/Metis ThirdParty/Mumps' --build=x86_64-w64-mingw32 ${{ env.host_flag }} ${{ matrix.debug }} --verbosity 2 --tests ${{ matrix.tests }} --enable-relocatable"
