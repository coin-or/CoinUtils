# Makefile.in generated by automake 1.16.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2020 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright (C) 2006 International Business Machines and others.
# All Rights Reserved.
# This file is distributed under the Eclipse Public License.
#
# Author:  Andreas Waechter           IBM    2006-04-13


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@BUILD_OSLFACTORIZATION_TRUE@am__append_1 = CoinOslFactorization.cpp CoinOslFactorization2.cpp CoinOslFactorization3.cpp CoinSimpFactorization.cpp
@BUILD_OSLFACTORIZATION_TRUE@am__append_2 = CoinOslFactorization.hpp CoinSimpFactorization.hpp
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_coinutils_inttypes.m4 \
	$(top_srcdir)/m4/ac_coinutils_mempool.m4 \
	$(top_srcdir)/m4/ac_coinutils_threads.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__includecoin_HEADERS_DIST)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h config_coinutils.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includecoindir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libCoinUtils_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
@BUILD_OSLFACTORIZATION_TRUE@am__objects_1 = CoinOslFactorization.lo \
@BUILD_OSLFACTORIZATION_TRUE@	CoinOslFactorization2.lo \
@BUILD_OSLFACTORIZATION_TRUE@	CoinOslFactorization3.lo \
@BUILD_OSLFACTORIZATION_TRUE@	CoinSimpFactorization.lo
am_libCoinUtils_la_OBJECTS = CoinAlloc.lo CoinBuild.lo \
	CoinDenseVector.lo CoinError.lo CoinFactorization1.lo \
	CoinFactorization2.lo CoinFactorization3.lo \
	CoinFactorization4.lo CoinDenseFactorization.lo CoinFileIO.lo \
	CoinFinite.lo CoinIndexedVector.lo CoinLpIO.lo CoinMessage.lo \
	CoinMessageHandler.lo CoinModel.lo CoinStructuredModel.lo \
	CoinModelUseful.lo CoinModelUseful2.lo CoinMpsIO.lo \
	CoinPackedMatrix.lo CoinPackedVector.lo \
	CoinPackedVectorBase.lo CoinParam.lo CoinParamUtils.lo \
	CoinPostsolveMatrix.lo CoinPrePostsolveMatrix.lo \
	CoinPresolveDoubleton.lo CoinPresolveDual.lo \
	CoinPresolveDupcol.lo CoinPresolveEmpty.lo \
	CoinPresolveFixed.lo CoinPresolveForcing.lo \
	CoinPresolveHelperFunctions.lo CoinPresolveImpliedFree.lo \
	CoinPresolveIsolated.lo CoinPresolveMatrix.lo \
	CoinPresolvePsdebug.lo CoinPresolveMonitor.lo \
	CoinPresolveSingleton.lo CoinPresolveSubst.lo \
	CoinPresolveTighten.lo CoinPresolveTripleton.lo \
	CoinPresolveUseless.lo CoinPresolveZeros.lo CoinRational.lo \
	CoinSearchTree.lo CoinShallowPackedVector.lo CoinSnapshot.lo \
	CoinWarmStartBasis.lo CoinWarmStartVector.lo \
	CoinWarmStartDual.lo CoinWarmStartPrimalDual.lo \
	CoinAdjacencyVector.lo CoinBronKerbosch.lo \
	CoinCliqueExtender.lo CoinCliqueList.lo CoinCliqueSet.lo \
	CoinConflictGraph.lo CoinCutPool.lo \
	CoinDynamicConflictGraph.lo CoinNodeHeap.lo \
	CoinOddWheelSeparator.lo CoinShortestPath.lo \
	CoinStaticConflictGraph.lo $(am__objects_1)
libCoinUtils_la_OBJECTS = $(am_libCoinUtils_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/CoinAdjacencyVector.Plo \
	./$(DEPDIR)/CoinAlloc.Plo ./$(DEPDIR)/CoinBronKerbosch.Plo \
	./$(DEPDIR)/CoinBuild.Plo ./$(DEPDIR)/CoinCliqueExtender.Plo \
	./$(DEPDIR)/CoinCliqueList.Plo ./$(DEPDIR)/CoinCliqueSet.Plo \
	./$(DEPDIR)/CoinConflictGraph.Plo ./$(DEPDIR)/CoinCutPool.Plo \
	./$(DEPDIR)/CoinDenseFactorization.Plo \
	./$(DEPDIR)/CoinDenseVector.Plo \
	./$(DEPDIR)/CoinDynamicConflictGraph.Plo \
	./$(DEPDIR)/CoinError.Plo ./$(DEPDIR)/CoinFactorization1.Plo \
	./$(DEPDIR)/CoinFactorization2.Plo \
	./$(DEPDIR)/CoinFactorization3.Plo \
	./$(DEPDIR)/CoinFactorization4.Plo ./$(DEPDIR)/CoinFileIO.Plo \
	./$(DEPDIR)/CoinFinite.Plo ./$(DEPDIR)/CoinIndexedVector.Plo \
	./$(DEPDIR)/CoinLpIO.Plo ./$(DEPDIR)/CoinMessage.Plo \
	./$(DEPDIR)/CoinMessageHandler.Plo ./$(DEPDIR)/CoinModel.Plo \
	./$(DEPDIR)/CoinModelUseful.Plo \
	./$(DEPDIR)/CoinModelUseful2.Plo ./$(DEPDIR)/CoinMpsIO.Plo \
	./$(DEPDIR)/CoinNodeHeap.Plo \
	./$(DEPDIR)/CoinOddWheelSeparator.Plo \
	./$(DEPDIR)/CoinOslFactorization.Plo \
	./$(DEPDIR)/CoinOslFactorization2.Plo \
	./$(DEPDIR)/CoinOslFactorization3.Plo \
	./$(DEPDIR)/CoinPackedMatrix.Plo \
	./$(DEPDIR)/CoinPackedVector.Plo \
	./$(DEPDIR)/CoinPackedVectorBase.Plo ./$(DEPDIR)/CoinParam.Plo \
	./$(DEPDIR)/CoinParamUtils.Plo \
	./$(DEPDIR)/CoinPostsolveMatrix.Plo \
	./$(DEPDIR)/CoinPrePostsolveMatrix.Plo \
	./$(DEPDIR)/CoinPresolveDoubleton.Plo \
	./$(DEPDIR)/CoinPresolveDual.Plo \
	./$(DEPDIR)/CoinPresolveDupcol.Plo \
	./$(DEPDIR)/CoinPresolveEmpty.Plo \
	./$(DEPDIR)/CoinPresolveFixed.Plo \
	./$(DEPDIR)/CoinPresolveForcing.Plo \
	./$(DEPDIR)/CoinPresolveHelperFunctions.Plo \
	./$(DEPDIR)/CoinPresolveImpliedFree.Plo \
	./$(DEPDIR)/CoinPresolveIsolated.Plo \
	./$(DEPDIR)/CoinPresolveMatrix.Plo \
	./$(DEPDIR)/CoinPresolveMonitor.Plo \
	./$(DEPDIR)/CoinPresolvePsdebug.Plo \
	./$(DEPDIR)/CoinPresolveSingleton.Plo \
	./$(DEPDIR)/CoinPresolveSubst.Plo \
	./$(DEPDIR)/CoinPresolveTighten.Plo \
	./$(DEPDIR)/CoinPresolveTripleton.Plo \
	./$(DEPDIR)/CoinPresolveUseless.Plo \
	./$(DEPDIR)/CoinPresolveZeros.Plo ./$(DEPDIR)/CoinRational.Plo \
	./$(DEPDIR)/CoinSearchTree.Plo \
	./$(DEPDIR)/CoinShallowPackedVector.Plo \
	./$(DEPDIR)/CoinShortestPath.Plo \
	./$(DEPDIR)/CoinSimpFactorization.Plo \
	./$(DEPDIR)/CoinSnapshot.Plo \
	./$(DEPDIR)/CoinStaticConflictGraph.Plo \
	./$(DEPDIR)/CoinStructuredModel.Plo \
	./$(DEPDIR)/CoinWarmStartBasis.Plo \
	./$(DEPDIR)/CoinWarmStartDual.Plo \
	./$(DEPDIR)/CoinWarmStartPrimalDual.Plo \
	./$(DEPDIR)/CoinWarmStartVector.Plo
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libCoinUtils_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__includecoin_HEADERS_DIST = CoinAlloc.hpp CoinBuild.hpp \
	CoinDenseVector.hpp CoinDistance.hpp CoinError.hpp \
	CoinFactorization.hpp CoinDenseFactorization.hpp \
	CoinFileIO.hpp CoinFinite.hpp CoinFloatEqual.hpp \
	CoinHelperFunctions.hpp CoinIndexedVector.hpp CoinLpIO.hpp \
	CoinMessage.hpp CoinMessageHandler.hpp CoinModel.hpp \
	CoinStructuredModel.hpp CoinModelUseful.hpp CoinMpsIO.hpp \
	CoinPackedMatrix.hpp CoinPackedVector.hpp \
	CoinPackedVectorBase.hpp CoinParam.hpp CoinPragma.hpp \
	CoinPresolveDoubleton.hpp CoinPresolveDual.hpp \
	CoinPresolveDupcol.hpp CoinPresolveEmpty.hpp \
	CoinPresolveFixed.hpp CoinPresolveForcing.hpp \
	CoinPresolveImpliedFree.hpp CoinPresolveIsolated.hpp \
	CoinPresolveMatrix.hpp CoinPresolveMonitor.hpp \
	CoinPresolvePsdebug.hpp CoinPresolveSingleton.hpp \
	CoinPresolveSubst.hpp CoinPresolveTighten.hpp \
	CoinPresolveTripleton.hpp CoinPresolveUseless.hpp \
	CoinPresolveZeros.hpp CoinRational.hpp CoinSearchTree.hpp \
	CoinShallowPackedVector.hpp CoinSignal.hpp CoinSmartPtr.hpp \
	CoinSnapshot.hpp CoinSort.hpp CoinTime.hpp CoinTypes.h \
	CoinUtility.hpp CoinWarmStart.hpp CoinWarmStartBasis.hpp \
	CoinWarmStartVector.hpp CoinWarmStartDual.hpp \
	CoinWarmStartPrimalDual.hpp CoinAdjacencyVector.hpp \
	CoinBronKerbosch.hpp CoinCliqueExtender.hpp CoinCliqueList.hpp \
	CoinCliqueSet.hpp CoinConflictGraph.hpp CoinCutPool.hpp \
	CoinDynamicConflictGraph.hpp CoinNodeHeap.hpp \
	CoinOddWheelSeparator.hpp CoinShortestPath.hpp \
	CoinStaticConflictGraph.hpp CoinOslFactorization.hpp \
	CoinSimpFactorization.hpp
HEADERS = $(includecoin_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP) \
	config.h.in config_coinutils.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
pkgdatadir = $(datadir)/$(PACKAGE_TARNAME)
pkgincludedir = $(includedir)/coin-or
ACLOCAL = @ACLOCAL@
ADD_CFLAGS = @ADD_CFLAGS@
ADD_CXXFLAGS = @ADD_CXXFLAGS@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
COINUTILSLIB_CFLAGS = @COINUTILSLIB_CFLAGS@
COINUTILSLIB_CFLAGS_NOPC = @COINUTILSLIB_CFLAGS_NOPC@
COINUTILSLIB_LFLAGS = @COINUTILSLIB_LFLAGS@
COINUTILSLIB_LFLAGS_NOPC = @COINUTILSLIB_LFLAGS_NOPC@
COINUTILSLIB_PCFILES = @COINUTILSLIB_PCFILES@
COIN_PKG_CONFIG_PATH = @COIN_PKG_CONFIG_PATH@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_LDFLAGS = @LT_LDFLAGS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NETLIB_DATA = @NETLIB_DATA@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
RANLIB = @RANLIB@
SAMPLE_DATA = @SAMPLE_DATA@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_PKG_CONFIG = @ac_ct_PKG_CONFIG@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
coin_doxy_logname = @coin_doxy_logname@
coin_doxy_tagfiles = @coin_doxy_tagfiles@
coin_doxy_tagname = @coin_doxy_tagname@
coin_doxy_usedot = @coin_doxy_usedot@
coin_have_doxygen = @coin_have_doxygen@
coin_have_latex = @coin_have_latex@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
pkgdocdir = $(docdir)
pkgconfiglibdir = $(libdir)/pkgconfig

# doxydocdir is the top-level directory for doxygen documentation. It holds
# the tag file and possibly the PDF or Postscript version. doxyhtmldir is
# typically a subdirectory containing all the files doxygen creates for
# html documentation.
doxydocdir = $(pkgdocdir)/doxydoc
doxyhtmldir = $(doxydocdir)/html
DocFiles = README README.md AUTHORS AUTHORS.md LICENSE LICENSE.md
COIN_HAS_DOXYGEN = @COIN_HAS_DOXYGEN_TRUE@TRUE
COIN_HAS_LATEX = @COIN_HAS_LATEX_TRUE@TRUE
DOXYTAG_EDIT = sed -e 's|@baredocdir_nosub@|$(datarootdir)/doc|g'

########################################################################
#                             libCoinUtils                             #
########################################################################

# Name of the library compiled in this directory.
# We want it to be installed in the $libdir directory
lib_LTLIBRARIES = libCoinUtils.la

# List all source files for this library
libCoinUtils_la_SOURCES = CoinAlloc.cpp CoinBuild.cpp \
	CoinDenseVector.cpp CoinError.cpp CoinFactorization1.cpp \
	CoinFactorization2.cpp CoinFactorization3.cpp \
	CoinFactorization4.cpp CoinDenseFactorization.cpp \
	CoinFileIO.cpp CoinFinite.cpp CoinIndexedVector.cpp \
	CoinLpIO.cpp CoinMessage.cpp CoinMessageHandler.cpp \
	CoinModel.cpp CoinStructuredModel.cpp CoinModelUseful.cpp \
	CoinModelUseful2.cpp CoinMpsIO.cpp CoinPackedMatrix.cpp \
	CoinPackedVector.cpp CoinPackedVectorBase.cpp CoinParam.cpp \
	CoinParamUtils.cpp CoinPostsolveMatrix.cpp \
	CoinPrePostsolveMatrix.cpp CoinPresolveDoubleton.cpp \
	CoinPresolveDual.cpp CoinPresolveDupcol.cpp \
	CoinPresolveEmpty.cpp CoinPresolveFixed.cpp \
	CoinPresolveForcing.cpp CoinPresolveHelperFunctions.cpp \
	CoinPresolveImpliedFree.cpp CoinPresolveIsolated.cpp \
	CoinPresolveMatrix.cpp CoinPresolvePsdebug.cpp \
	CoinPresolveMonitor.cpp CoinPresolveSingleton.cpp \
	CoinPresolveSubst.cpp CoinPresolveTighten.cpp \
	CoinPresolveTripleton.cpp CoinPresolveUseless.cpp \
	CoinPresolveZeros.cpp CoinRational.cpp CoinSearchTree.cpp \
	CoinShallowPackedVector.cpp CoinSnapshot.cpp \
	CoinWarmStartBasis.cpp CoinWarmStartVector.cpp \
	CoinWarmStartDual.cpp CoinWarmStartPrimalDual.cpp \
	CoinAdjacencyVector.cpp CoinBronKerbosch.cpp \
	CoinCliqueExtender.cpp CoinCliqueList.cpp CoinCliqueSet.cpp \
	CoinConflictGraph.cpp CoinCutPool.cpp \
	CoinDynamicConflictGraph.cpp CoinNodeHeap.cpp \
	CoinOddWheelSeparator.cpp CoinShortestPath.cpp \
	CoinStaticConflictGraph.cpp $(am__append_1)

# Add library dependencies to libCoinUtils.
libCoinUtils_la_LIBADD = $(COINUTILSLIB_LFLAGS)

# This is for libtool.
AM_LDFLAGS = $(LT_LDFLAGS)

# Here list all include flags, relative to this "srcdir" directory.
AM_CPPFLAGS = $(COINUTILSLIB_CFLAGS)

########################################################################
#                Headers that need to be installed                     #
########################################################################

# Here list all the header files that are required by a user of the library,
# and that therefore should be installed in pkgincludedir.
includecoindir = $(pkgincludedir)
includecoin_HEADERS = CoinAlloc.hpp CoinBuild.hpp CoinDenseVector.hpp \
	CoinDistance.hpp CoinError.hpp CoinFactorization.hpp \
	CoinDenseFactorization.hpp CoinFileIO.hpp CoinFinite.hpp \
	CoinFloatEqual.hpp CoinHelperFunctions.hpp \
	CoinIndexedVector.hpp CoinLpIO.hpp CoinMessage.hpp \
	CoinMessageHandler.hpp CoinModel.hpp CoinStructuredModel.hpp \
	CoinModelUseful.hpp CoinMpsIO.hpp CoinPackedMatrix.hpp \
	CoinPackedVector.hpp CoinPackedVectorBase.hpp CoinParam.hpp \
	CoinPragma.hpp CoinPresolveDoubleton.hpp CoinPresolveDual.hpp \
	CoinPresolveDupcol.hpp CoinPresolveEmpty.hpp \
	CoinPresolveFixed.hpp CoinPresolveForcing.hpp \
	CoinPresolveImpliedFree.hpp CoinPresolveIsolated.hpp \
	CoinPresolveMatrix.hpp CoinPresolveMonitor.hpp \
	CoinPresolvePsdebug.hpp CoinPresolveSingleton.hpp \
	CoinPresolveSubst.hpp CoinPresolveTighten.hpp \
	CoinPresolveTripleton.hpp CoinPresolveUseless.hpp \
	CoinPresolveZeros.hpp CoinRational.hpp CoinSearchTree.hpp \
	CoinShallowPackedVector.hpp CoinSignal.hpp CoinSmartPtr.hpp \
	CoinSnapshot.hpp CoinSort.hpp CoinTime.hpp CoinTypes.h \
	CoinUtility.hpp CoinWarmStart.hpp CoinWarmStartBasis.hpp \
	CoinWarmStartVector.hpp CoinWarmStartDual.hpp \
	CoinWarmStartPrimalDual.hpp CoinAdjacencyVector.hpp \
	CoinBronKerbosch.hpp CoinCliqueExtender.hpp CoinCliqueList.hpp \
	CoinCliqueSet.hpp CoinConflictGraph.hpp CoinCutPool.hpp \
	CoinDynamicConflictGraph.hpp CoinNodeHeap.hpp \
	CoinOddWheelSeparator.hpp CoinShortestPath.hpp \
	CoinStaticConflictGraph.hpp $(am__append_2)
all: config.h config_coinutils.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/BuildTools/Makemain.inc $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/BuildTools/Makemain.inc $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

config_coinutils.h: stamp-h2
	@test -f $@ || rm -f stamp-h2
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h2

stamp-h2: $(srcdir)/config_coinutils.h.in $(top_builddir)/config.status
	@rm -f stamp-h2
	cd $(top_builddir) && $(SHELL) ./config.status src/config_coinutils.h

distclean-hdr:
	-rm -f config.h stamp-h1 config_coinutils.h stamp-h2

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libCoinUtils.la: $(libCoinUtils_la_OBJECTS) $(libCoinUtils_la_DEPENDENCIES) $(EXTRA_libCoinUtils_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK) -rpath $(libdir) $(libCoinUtils_la_OBJECTS) $(libCoinUtils_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAdjacencyVector.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinAlloc.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinBronKerbosch.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinBuild.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinCliqueExtender.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinCliqueList.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinCliqueSet.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinConflictGraph.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinCutPool.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinDenseFactorization.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinDenseVector.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinDynamicConflictGraph.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinError.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinFactorization1.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinFactorization2.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinFactorization3.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinFactorization4.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinFileIO.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinFinite.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinIndexedVector.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinLpIO.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinMessage.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinMessageHandler.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinModel.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinModelUseful.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinModelUseful2.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinMpsIO.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinNodeHeap.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinOddWheelSeparator.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinOslFactorization.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinOslFactorization2.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinOslFactorization3.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPackedMatrix.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPackedVector.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPackedVectorBase.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinParam.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinParamUtils.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPostsolveMatrix.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPrePostsolveMatrix.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPresolveDoubleton.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPresolveDual.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPresolveDupcol.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPresolveEmpty.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPresolveFixed.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPresolveForcing.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPresolveHelperFunctions.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPresolveImpliedFree.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPresolveIsolated.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPresolveMatrix.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPresolveMonitor.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPresolvePsdebug.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPresolveSingleton.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPresolveSubst.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPresolveTighten.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPresolveTripleton.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPresolveUseless.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinPresolveZeros.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinRational.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinSearchTree.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinShallowPackedVector.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinShortestPath.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinSimpFactorization.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinSnapshot.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinStaticConflictGraph.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinStructuredModel.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinWarmStartBasis.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinWarmStartDual.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinWarmStartPrimalDual.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinWarmStartVector.Plo@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includecoinHEADERS: $(includecoin_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(includecoin_HEADERS)'; test -n "$(includecoindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includecoindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includecoindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includecoindir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includecoindir)" || exit $$?; \
	done

uninstall-includecoinHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(includecoin_HEADERS)'; test -n "$(includecoindir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includecoindir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS) config.h config_coinutils.h
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includecoindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/CoinAdjacencyVector.Plo
	-rm -f ./$(DEPDIR)/CoinAlloc.Plo
	-rm -f ./$(DEPDIR)/CoinBronKerbosch.Plo
	-rm -f ./$(DEPDIR)/CoinBuild.Plo
	-rm -f ./$(DEPDIR)/CoinCliqueExtender.Plo
	-rm -f ./$(DEPDIR)/CoinCliqueList.Plo
	-rm -f ./$(DEPDIR)/CoinCliqueSet.Plo
	-rm -f ./$(DEPDIR)/CoinConflictGraph.Plo
	-rm -f ./$(DEPDIR)/CoinCutPool.Plo
	-rm -f ./$(DEPDIR)/CoinDenseFactorization.Plo
	-rm -f ./$(DEPDIR)/CoinDenseVector.Plo
	-rm -f ./$(DEPDIR)/CoinDynamicConflictGraph.Plo
	-rm -f ./$(DEPDIR)/CoinError.Plo
	-rm -f ./$(DEPDIR)/CoinFactorization1.Plo
	-rm -f ./$(DEPDIR)/CoinFactorization2.Plo
	-rm -f ./$(DEPDIR)/CoinFactorization3.Plo
	-rm -f ./$(DEPDIR)/CoinFactorization4.Plo
	-rm -f ./$(DEPDIR)/CoinFileIO.Plo
	-rm -f ./$(DEPDIR)/CoinFinite.Plo
	-rm -f ./$(DEPDIR)/CoinIndexedVector.Plo
	-rm -f ./$(DEPDIR)/CoinLpIO.Plo
	-rm -f ./$(DEPDIR)/CoinMessage.Plo
	-rm -f ./$(DEPDIR)/CoinMessageHandler.Plo
	-rm -f ./$(DEPDIR)/CoinModel.Plo
	-rm -f ./$(DEPDIR)/CoinModelUseful.Plo
	-rm -f ./$(DEPDIR)/CoinModelUseful2.Plo
	-rm -f ./$(DEPDIR)/CoinMpsIO.Plo
	-rm -f ./$(DEPDIR)/CoinNodeHeap.Plo
	-rm -f ./$(DEPDIR)/CoinOddWheelSeparator.Plo
	-rm -f ./$(DEPDIR)/CoinOslFactorization.Plo
	-rm -f ./$(DEPDIR)/CoinOslFactorization2.Plo
	-rm -f ./$(DEPDIR)/CoinOslFactorization3.Plo
	-rm -f ./$(DEPDIR)/CoinPackedMatrix.Plo
	-rm -f ./$(DEPDIR)/CoinPackedVector.Plo
	-rm -f ./$(DEPDIR)/CoinPackedVectorBase.Plo
	-rm -f ./$(DEPDIR)/CoinParam.Plo
	-rm -f ./$(DEPDIR)/CoinParamUtils.Plo
	-rm -f ./$(DEPDIR)/CoinPostsolveMatrix.Plo
	-rm -f ./$(DEPDIR)/CoinPrePostsolveMatrix.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveDoubleton.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveDual.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveDupcol.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveEmpty.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveFixed.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveForcing.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveHelperFunctions.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveImpliedFree.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveIsolated.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveMatrix.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveMonitor.Plo
	-rm -f ./$(DEPDIR)/CoinPresolvePsdebug.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveSingleton.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveSubst.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveTighten.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveTripleton.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveUseless.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveZeros.Plo
	-rm -f ./$(DEPDIR)/CoinRational.Plo
	-rm -f ./$(DEPDIR)/CoinSearchTree.Plo
	-rm -f ./$(DEPDIR)/CoinShallowPackedVector.Plo
	-rm -f ./$(DEPDIR)/CoinShortestPath.Plo
	-rm -f ./$(DEPDIR)/CoinSimpFactorization.Plo
	-rm -f ./$(DEPDIR)/CoinSnapshot.Plo
	-rm -f ./$(DEPDIR)/CoinStaticConflictGraph.Plo
	-rm -f ./$(DEPDIR)/CoinStructuredModel.Plo
	-rm -f ./$(DEPDIR)/CoinWarmStartBasis.Plo
	-rm -f ./$(DEPDIR)/CoinWarmStartDual.Plo
	-rm -f ./$(DEPDIR)/CoinWarmStartPrimalDual.Plo
	-rm -f ./$(DEPDIR)/CoinWarmStartVector.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includecoinHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-exec-local install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/CoinAdjacencyVector.Plo
	-rm -f ./$(DEPDIR)/CoinAlloc.Plo
	-rm -f ./$(DEPDIR)/CoinBronKerbosch.Plo
	-rm -f ./$(DEPDIR)/CoinBuild.Plo
	-rm -f ./$(DEPDIR)/CoinCliqueExtender.Plo
	-rm -f ./$(DEPDIR)/CoinCliqueList.Plo
	-rm -f ./$(DEPDIR)/CoinCliqueSet.Plo
	-rm -f ./$(DEPDIR)/CoinConflictGraph.Plo
	-rm -f ./$(DEPDIR)/CoinCutPool.Plo
	-rm -f ./$(DEPDIR)/CoinDenseFactorization.Plo
	-rm -f ./$(DEPDIR)/CoinDenseVector.Plo
	-rm -f ./$(DEPDIR)/CoinDynamicConflictGraph.Plo
	-rm -f ./$(DEPDIR)/CoinError.Plo
	-rm -f ./$(DEPDIR)/CoinFactorization1.Plo
	-rm -f ./$(DEPDIR)/CoinFactorization2.Plo
	-rm -f ./$(DEPDIR)/CoinFactorization3.Plo
	-rm -f ./$(DEPDIR)/CoinFactorization4.Plo
	-rm -f ./$(DEPDIR)/CoinFileIO.Plo
	-rm -f ./$(DEPDIR)/CoinFinite.Plo
	-rm -f ./$(DEPDIR)/CoinIndexedVector.Plo
	-rm -f ./$(DEPDIR)/CoinLpIO.Plo
	-rm -f ./$(DEPDIR)/CoinMessage.Plo
	-rm -f ./$(DEPDIR)/CoinMessageHandler.Plo
	-rm -f ./$(DEPDIR)/CoinModel.Plo
	-rm -f ./$(DEPDIR)/CoinModelUseful.Plo
	-rm -f ./$(DEPDIR)/CoinModelUseful2.Plo
	-rm -f ./$(DEPDIR)/CoinMpsIO.Plo
	-rm -f ./$(DEPDIR)/CoinNodeHeap.Plo
	-rm -f ./$(DEPDIR)/CoinOddWheelSeparator.Plo
	-rm -f ./$(DEPDIR)/CoinOslFactorization.Plo
	-rm -f ./$(DEPDIR)/CoinOslFactorization2.Plo
	-rm -f ./$(DEPDIR)/CoinOslFactorization3.Plo
	-rm -f ./$(DEPDIR)/CoinPackedMatrix.Plo
	-rm -f ./$(DEPDIR)/CoinPackedVector.Plo
	-rm -f ./$(DEPDIR)/CoinPackedVectorBase.Plo
	-rm -f ./$(DEPDIR)/CoinParam.Plo
	-rm -f ./$(DEPDIR)/CoinParamUtils.Plo
	-rm -f ./$(DEPDIR)/CoinPostsolveMatrix.Plo
	-rm -f ./$(DEPDIR)/CoinPrePostsolveMatrix.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveDoubleton.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveDual.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveDupcol.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveEmpty.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveFixed.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveForcing.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveHelperFunctions.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveImpliedFree.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveIsolated.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveMatrix.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveMonitor.Plo
	-rm -f ./$(DEPDIR)/CoinPresolvePsdebug.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveSingleton.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveSubst.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveTighten.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveTripleton.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveUseless.Plo
	-rm -f ./$(DEPDIR)/CoinPresolveZeros.Plo
	-rm -f ./$(DEPDIR)/CoinRational.Plo
	-rm -f ./$(DEPDIR)/CoinSearchTree.Plo
	-rm -f ./$(DEPDIR)/CoinShallowPackedVector.Plo
	-rm -f ./$(DEPDIR)/CoinShortestPath.Plo
	-rm -f ./$(DEPDIR)/CoinSimpFactorization.Plo
	-rm -f ./$(DEPDIR)/CoinSnapshot.Plo
	-rm -f ./$(DEPDIR)/CoinStaticConflictGraph.Plo
	-rm -f ./$(DEPDIR)/CoinStructuredModel.Plo
	-rm -f ./$(DEPDIR)/CoinWarmStartBasis.Plo
	-rm -f ./$(DEPDIR)/CoinWarmStartDual.Plo
	-rm -f ./$(DEPDIR)/CoinWarmStartPrimalDual.Plo
	-rm -f ./$(DEPDIR)/CoinWarmStartVector.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includecoinHEADERS uninstall-libLTLIBRARIES \
	uninstall-local

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libLTLIBRARIES clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-exec-local install-html \
	install-html-am install-includecoinHEADERS install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am \
	uninstall-includecoinHEADERS uninstall-libLTLIBRARIES \
	uninstall-local

.PRECIOUS: Makefile


doxygen-docs: 
	if test "$(COIN_HAS_DOXYGEN)" = TRUE; then \
	  if test -d "doxydoc/"; then \
	    if test -f doxydoc/doxygen.conf ; then \
	      $(DOXYTAG_EDIT) \
	        doxydoc/doxygen.conf > doxydoc/doxygen.conf.tmp ; \
	      mv doxydoc/doxygen.conf.tmp doxydoc/doxygen.conf ; \
	    fi ; \
	    doxygen doxydoc/doxygen.conf;\
	  fi;\
	fi

pdf-doxygen-docs: doxygen-docs
	if test "$(COIN_HAS_DOXYGEN)" = TRUE; then \
	  if test -d "doxydoc/latex"; then \
       	    if test "$(COIN_HAS_LATEX)" = TRUE; then \
	      cd doxydoc/latex;\
	      $(MAKE) pdf;\
	      cd -;\
	    fi;\
	  fi;\
	fi

clean-doxygen-docs:
	if test -d "doxydoc"; then \
	  cd doxydoc ;\
	  rm -rf html latex *.log *.tag;\
	fi

install-doxygen-docs: doxygen-docs
	if test "$(COIN_HAS_DOXYGEN)" = TRUE; then \
	  if test -d "doxydoc"; then \
	    test -d "$(DESTDIR)$(doxydocdir)" || \
	         $(mkdir_p) "$(DESTDIR)$(doxydocdir)"; \
	    $(INSTALL_DATA) doxydoc/@coin_doxy_tagname@ \
	        "$(DESTDIR)$(doxydocdir)"; \
	    if test -f "doxydoc/latex/refman.pdf"; then \
	      $(INSTALL_DATA) doxydoc/latex/refman.pdf \
	          "$(DESTDIR)$(doxydocdir)";\
	    fi;\
	    if test -d "doxydoc/html"; then \
	      test -d "$(DESTDIR)$(doxyhtmldir)/search/" || \
	           $(mkdir_p) "$(DESTDIR)$(doxyhtmldir)/search/"; \
	      $(INSTALL_DATA) doxydoc/html/*.* \
	          "$(DESTDIR)$(doxyhtmldir)";\
	      $(INSTALL_DATA) doxydoc/html/search/*.* \
	          "$(DESTDIR)$(doxyhtmldir)/search";\
            fi;\
          fi;\
        fi

# It's not clear that uninstall-doc should also remove doxygen doc'n. Write
# the rules so that the last one will remove pkgdocdir (which should be empty
# by then).

uninstall-doxygen-docs:
	if test -d "$(DESTDIR)$(doxydocdir)"; then \
	  rm -rf "$(DESTDIR)$(doxydocdir)"; \
	fi
	rmdir $(DESTDIR)$(pkgdocdir) || true

install-doc:
	$(mkdir_p) "$(DESTDIR)$(pkgdocdir)"
	for file in $(DocFiles); do \
	  if test -f "$$file"; then dir=; else dir="$(srcdir)/"; fi; \
	  if test -f "$$dir$$file"; then \
	    $(INSTALL_DATA) "$$dir$$file" "$(DESTDIR)$(pkgdocdir)/$$file"; \
	  fi; \
	done

uninstall-doc:
	for file in $(DocFiles); do \
	  rm -f "$(DESTDIR)$(pkgdocdir)/$$file"; \
	done
	rmdir $(DESTDIR)$(pkgdocdir) || true

.PHONY: install-doc uninstall-doc \
	doxygen-docs pdf-doxygen-docs clean-doxygen-docs \
	install-doxygen-docs uninstall-doxygen-docs

#######################################################################
# Create the Config.h file that has all public defines and install it #
#######################################################################

install-exec-local:
	$(install_sh_DATA) config_coinutils.h $(DESTDIR)$(includecoindir)/CoinUtilsConfig.h

uninstall-local:
	rm -f $(DESTDIR)$(includecoindir)/CoinUtilsConfig.h

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
